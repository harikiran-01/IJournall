# This is a basic workflow to help you get started with Actions
name: Feature Branch CI
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
    branches: [ dev ]
    types:
      - closed
      # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  debug-apk:
    #needs: [ instrumentation-test ]
    if: github.event.pull_request.merged == 'true'
    name: Generate Debug APK
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: App Checkout
        uses: actions/checkout@v2

      # Sets up Jdk 11.0.13
      - name: setup JDK 11.0.13
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.13

      # Builds debug apk
#      - name: Building Debug APK
#        run: bash ./gradlew assembleDebug --stacktrace

      - name: Upload to Slack
        uses: ./.github/actions/upload_to_slack
        with:
          file_path: app/proguard-rules.pro
          comment: Debug Apk for <https://github.com/harikiran-01/IJournall/pull/${{ github.event.number }}|PR> on branch ${{ github.head_ref }}
          channels: general
          slack_secret: ${{ secrets.SLACK_UPLOAD_APK_BOT }}

#  release-apk:
#    needs: [ instrumentation-test ]
#    name: Generate Release APK
#    runs-on: ubuntu-latest
#    steps:
#      - name: App Checkout
#        uses: actions/checkout@v2
#
#      - name: set up JDK 11.0.13
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11.0.13
#
#      # Builds release apk
#      - name: Building Release APK
#        run: bash ./gradlew assembleRelease --stacktrace
#
#      - name: Upload Apk Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: release-apk
#          path: app/build/outputs/apk/release/app-release.apk
#
#      # Uploads the built apk to Slack channel
#      - name: Upload to Slack
#        uses: ./.github/actions/upload_to_slack
#        with:
#          file_path: app/build/outputs/apk/release/app-release.apk
#          comment: Release Apk
#          channels: general
#          slack_secret: ${{ secrets.SLACK_UPLOAD_APK_BOT }}